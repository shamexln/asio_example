syntax = "proto3";
package medibus;

// The greeting service definition.
service Medibus {
  // The following are all request from client to server with the parameter filled with the device responds

  // Request current Alarms (Codepage 3)
  rpc CurAlarmsCP3 (MedibusRequest) returns (MedibusReply) {}

  // Request current measured data (codepage 1) 24H
  rpc CurMeasuredDataCP1 (MedibusRequest) returns (MedibusReply) {}

  // Request current low Alarm Limits (Codepage 1) 25H
  rpc CurLowAlarmLimitsCP1 (MedibusRequest) returns (MedibusReply) {}

  // Request current high Alarm Limits (Codepage 1) 26H
  rpc CurHighAlarmLimitsCP1 (MedibusRequest) returns (MedibusReply) {}

  // Request current Alarms (Codepage 1) 27H
  rpc CurAlarmsCP1 (MedibusRequest) returns (MedibusReply) {}
  
  // Request current device settings 29H
  rpc CurDeviceSettings (MedibusRequest) returns (MedibusReply) {}

  // Request test messages 2AH
  rpc TextMessages (MedibusRequest) returns (MedibusReply) {}

  // Request current measured data (codepage 2) 2BH
  rpc CurMeasuredDataCP2 (MedibusRequest) returns (MedibusReply) {}

  // Request current low Alarm Limits (Codepage 2) 2CH
  rpc CurLowAlarmLimitsCP2 (MedibusRequest) returns (MedibusReply) {}

  // Request current high Alarm Limits (Codepage 2) 2DH
  rpc CurHighAlarmLimitsCP2 (MedibusRequest) returns (MedibusReply) {}

  // Request current Alarms (Codepage 2) 2EH
  rpc CurAlarmsCP2 (MedibusRequest) returns (MedibusReply) {}

  // Request device identification 52H
  rpc DeviceIdentification (DeviceIdentificationRequest) returns (MedibusReply) {}

  // Request real time 
  rpc RealTime (MedibusRealTimeRequest) returns (MedibusReply) {}

  // Request all data for each medibus loop 
  rpc DataInEachLoop (LoopRequest) returns (MedibusReply) {}
}

// Device Identification message
message DeviceIdentificationRequest {
  optional string id = 1;
  message DeviceRespond {
  optional string deviceid = 1;
  optional string devicename = 2;
  optional string facility = 3;
  optional string poc = 4;
  optional string bed = 5;
  optional string room = 6;
  optional string building = 7;
  optional string floor = 8;
  }
  optional DeviceRespond deviceresponds = 2;
}

// The request common message
message MedibusRequest {
  optional string id = 1;
  message DeviceRespond {
  optional string code = 1;
  optional string value = 2;
  optional string unit = 3;
  optional string description = 4;
  }
  repeated DeviceRespond deviceresponds = 2;
  
}

// The response common message
message MedibusReply {
  optional string id = 1;
  string message = 2;
}

// The request real time message
message MedibusRealTimeRequest {
  optional string id = 1;
  message DeviceRespond {
  optional string min = 1;
  optional string max = 2;
  optional string maxbin = 3;
  optional string interval = 4;
  optional string description = 5;
  }
  repeated DeviceRespond deviceresponds = 2;
  optional string description = 3;
}

// The request common message
message LoopRequest {
  optional string id = 1;
  optional MedibusRequest CurMeasuredDataCP1 = 2;
  optional MedibusRequest CurLowAlarmLimitsCP1 = 3;
  optional MedibusRequest CurHighAlarmLimitsCP1 = 4;
  optional MedibusRequest CurAlarmsCP1 = 5;
  optional MedibusRequest CurDeviceSettings = 6;
  optional MedibusRequest TextMessages = 7;
  optional MedibusRequest CurMeasuredDataCP2 = 8;
  optional MedibusRequest CurLowAlarmLimitsCP2 = 9;
  optional MedibusRequest CurHighAlarmLimitsCP2 = 10;
  optional MedibusRequest CurAlarmsCP2 = 11;
  optional MedibusRequest DeviceIdentification = 12;
  repeated MedibusRealTimeRequest RealTime = 13;
 
}
